package com.probridge.expedite.model.expdb;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserRolesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public UserRolesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUserNameIsNull() {
            addCriterion("\"user_name\" is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("\"user_name\" is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("\"user_name\" =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("\"user_name\" <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("\"user_name\" >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("\"user_name\" >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("\"user_name\" <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("\"user_name\" <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("\"user_name\" like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("\"user_name\" not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("\"user_name\" in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("\"user_name\" not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("\"user_name\" between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("\"user_name\" not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserRolesIsNull() {
            addCriterion("\"user_roles\" is null");
            return (Criteria) this;
        }

        public Criteria andUserRolesIsNotNull() {
            addCriterion("\"user_roles\" is not null");
            return (Criteria) this;
        }

        public Criteria andUserRolesEqualTo(String value) {
            addCriterion("\"user_roles\" =", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesNotEqualTo(String value) {
            addCriterion("\"user_roles\" <>", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesGreaterThan(String value) {
            addCriterion("\"user_roles\" >", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesGreaterThanOrEqualTo(String value) {
            addCriterion("\"user_roles\" >=", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesLessThan(String value) {
            addCriterion("\"user_roles\" <", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesLessThanOrEqualTo(String value) {
            addCriterion("\"user_roles\" <=", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesLike(String value) {
            addCriterion("\"user_roles\" like", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesNotLike(String value) {
            addCriterion("\"user_roles\" not like", value, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesIn(List<String> values) {
            addCriterion("\"user_roles\" in", values, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesNotIn(List<String> values) {
            addCriterion("\"user_roles\" not in", values, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesBetween(String value1, String value2) {
            addCriterion("\"user_roles\" between", value1, value2, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRolesNotBetween(String value1, String value2) {
            addCriterion("\"user_roles\" not between", value1, value2, "userRoles");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationIsNull() {
            addCriterion("\"user_role_expiration\" is null");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationIsNotNull() {
            addCriterion("\"user_role_expiration\" is not null");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationEqualTo(Date value) {
            addCriterionForJDBCDate("\"user_role_expiration\" =", value, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationNotEqualTo(Date value) {
            addCriterionForJDBCDate("\"user_role_expiration\" <>", value, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationGreaterThan(Date value) {
            addCriterionForJDBCDate("\"user_role_expiration\" >", value, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("\"user_role_expiration\" >=", value, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationLessThan(Date value) {
            addCriterionForJDBCDate("\"user_role_expiration\" <", value, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("\"user_role_expiration\" <=", value, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationIn(List<Date> values) {
            addCriterionForJDBCDate("\"user_role_expiration\" in", values, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationNotIn(List<Date> values) {
            addCriterionForJDBCDate("\"user_role_expiration\" not in", values, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("\"user_role_expiration\" between", value1, value2, "userRoleExpiration");
            return (Criteria) this;
        }

        public Criteria andUserRoleExpirationNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("\"user_role_expiration\" not between", value1, value2, "userRoleExpiration");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 14 16:17:18 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EXPDB.EXPEDITE_ROLES
     *
     * @mbggenerated Mon Jul 14 16:17:18 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}