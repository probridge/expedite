<!--
    Copyright (C) 2006 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<html xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:f="http://orbeon.org/oxf/xml/formatting"
    xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns="http://www.w3.org/1999/xhtml">

    <head>
        <title>Orbeon Forms Source Code Viewer</title>
        <style type="text/css">
            .xforms-repeat-selected-item-1 { background: white; }
            .xforms-repeat-selected-item-2 { background: white; }

            .viewer-action-table td { white-space: nowrap; vertical-align: middle }
            .viewer-action-table input { vertical-align: middle }
            .viewer-action-table .xforms-trigger { vertical-align: middle }
            .xforms-trigger-appearance-minimal img { margin-right: 0.5em; vertical-align: middle }
            .xforms-label { font-weight: bold; margin-right: .5em }
        </style>
        <xf:model id="main-model">

            <!-- Load applications list and files list -->
            <xf:dispatch ev:event="xforms-ready" name="ops-initialize" targetid="main-model"/>

            <xf:action ev:event="ops-initialize">
                <xf:send submission="get-page-flow-submission"/>
                <xf:send submission="get-source-files-submission"/>
                <xf:setindex repeat="files-repeat" index="count((instance('source-files-instance')//file)[@path = instance('source-request-instance')/source-url]/preceding::file) + 1"/>
                <xf:dispatch name="ops-format-source" targetid="main-model"/>
            </xf:action>

            <!-- Page parameters -->
            <xf:instance id="parameters-instance" src="input:instance"/>

            <!-- The current application's page flow -->
            <xf:instance id="page-flow-instance">
                <page-flow/>
            </xf:instance>

            <xf:submission id="get-page-flow-submission" method="get" serialization="none"
                               action="oxf:/apps/{instance('parameters-instance')/application-id}/page-flow.xml"
                               replace="instance" instance="page-flow-instance"/>

            <!-- The current application's files list -->
            <xf:instance id="source-files-instance">
                <page-flow/>
            </xf:instance>

            <xf:submission id="get-source-files-submission" method="get" serialization="none"
                               action="/source-viewer/service/get-files?application-id={instance('parameters-instance')/application-id}"
                               replace="instance" instance="source-files-instance"/>

            <!-- The list of all applications -->
            <xf:instance id="apps-list-instance" src="oxf:/apps-list.xml"/>

            <!-- Control instance -->
            <xf:instance id="control-instance">
                <control xmlns="">
                    <show-xml>false</show-xml>
                    <xml-trigger/>
                    <text-trigger/>
                    <current-index/>
                    <application-id/>
                </control>
            </xf:instance>

            <!-- Source request instance -->
            <xf:instance id="source-request-instance">
                <form xmlns="">
                    <application-id/>
                    <source-url/>
                    <mediatype/>
                </form>
            </xf:instance>

            <!-- Source response instance -->
            <xf:instance id="source-response-instance">
                <document xmlns=""/>
            </xf:instance>

            <xf:bind ref="instance('source-files-instance')">
                <!-- Make sure there are no backslashes in file names -->
                <xf:bind ref=".//file/@path" calculate="replace(., '\\', '/')"/>
                <!-- Make current trigger read-only -->
                <xf:bind ref=".//file/@path" readonly=". = instance('source-request-instance')/source-url"/>
            </xf:bind>

            <xf:bind ref="instance('source-request-instance')">
                <xf:bind ref="application-id" calculate="instance('parameters-instance')/application-id"/>
                <xf:bind ref="source-url" calculate="if (. = '' and instance('parameters-instance')/source-url != '')
                                                             then instance('parameters-instance')/source-url
                                                             else (instance('source-files-instance')//file)[index('files-repeat')]/@path"/>
                <xf:bind ref="mediatype"
                             calculate="if (instance('control-instance')/show-xml = 'false' or ends-with(../source-url, '.txt') or ends-with(../source-url, '.java'))
                                        then 'text/plain' else 'application/xml'"/>
            </xf:bind>

            <xf:bind ref="instance('control-instance')">
                <xf:bind ref="xml-trigger" readonly="../show-xml = 'true'"/>
                <xf:bind ref="text-trigger" readonly="not(../show-xml = 'true')"/>
            </xf:bind>

            <xf:submission id="request-source-submission" ref="instance('source-request-instance')" method="get" separator="&amp;"
                action="/source-viewer/service/format" replace="instance" instance="source-response-instance"/>

            <xf:action ev:event="ops-format-source">
                <xf:setvalue ref="instance('control-instance')/current-index" value="index('files-repeat')"/>
                <xf:send submission="request-source-submission"/>
                <xf:setindex repeat="files-repeat" index="instance('control-instance')/current-index"/>
            </xf:action>

        </xf:model>
    </head>
    <body>
        <!-- Toolbar -->
        <table class="viewer-action-table">
            <tr>
                <td>
                    <xf:select1 ref="instance('parameters-instance')/application-id">
                        <xf:label>Application:</xf:label>
                        <xf:itemset ref="instance('apps-list-instance')//(section|application)">
                            <xf:label ref="@label"/>
                            <xf:value ref="@id"/>
                        </xf:itemset>
                        <xf:dispatch ev:event="xforms-value-changed" name="ops-initialize" targetid="main-model"/>
                    </xf:select1>
                </td>
                <td>
                    <xf:group ref="instance('control-instance')/text-trigger">
                        <xf:action ev:event="DOMActivate" >
                            <xf:setvalue ref="instance('control-instance')/show-xml">false</xf:setvalue>
                            <xf:dispatch ev:event="DOMActivate" name="ops-format-source" targetid="main-model"/>
                        </xf:action>
                        <xf:trigger appearance="minimal">
                            <xf:label>
                                <xh:img src="../../apps/source-viewer/images/text.gif" alt="View as text"/>
                                View as text
                            </xf:label>
                        </xf:trigger>
                    </xf:group>
                </td>
                <td>
                    <xf:group ref="instance('control-instance')/xml-trigger">
                        <xf:action ev:event="DOMActivate" >
                            <xf:setvalue ref="instance('control-instance')/show-xml">true</xf:setvalue>
                            <xf:dispatch ev:event="DOMActivate" name="ops-format-source" targetid="main-model"/>
                        </xf:action>
                        <xf:trigger appearance="minimal">
                            <xf:label>
                                <xh:img src="../../apps/source-viewer/images/view-xml.gif" alt="View as formatted XML"/>
                                View as formatted XML
                            </xf:label>
                        </xf:trigger>
                    </xf:group>
                </td>
                <td>
                    <xf:group>
                        <xf:action ev:event="DOMActivate" >
                            <xf:load resource="/source-viewer/service/download/{instance('parameters-instance')/application-id}/{(instance('source-files-instance')//file)[index('files-repeat')]/@path}"
                                         f:url-type="resource" xxf:show-progress="false"/>
                        </xf:action>
                        <xf:trigger appearance="minimal">
                            <xf:label>
                                <xh:img src="../../apps/source-viewer/images/download.gif" alt="Download"/>
                                Download
                            </xf:label>
                        </xf:trigger>
                    </xf:group>
                </td>
            </tr>
        </table>

        <!-- List of files -->
        <table style="border: solid 1px #f93" id="source-table">
            <tr>
                <td style="vertical-align: top">
                    <table>
                        <xf:group>
                            <xf:dispatch ev:event="DOMFocusIn" name="ops-format-source" targetid="main-model"/>
                            <xf:repeat ref="instance('source-files-instance')//file" id="files-repeat">
                                <tr>
                                    <td style="white-space: nowrap">
                                        <xf:trigger ref="@path" appearance="minimal">
                                            <xf:label ref="."/>
                                        </xf:trigger>
                                    </td>
                                    <td style="text-align: right">
                                        <xf:output value="format-number(@size, '###,##0')"/>
                                    </td>
                                </tr>
                            </xf:repeat>
                        </xf:group>
                        <tr/>
                    </table>
                </td>
                <td style="vertical-align: top; width: 100%">
                    <table style="width: 100%">
                        <tr>
                            <td style="padding: 0">
                                <div class="ops-source">
                                    <xf:output ref="instance('source-response-instance')" mediatype="text/html"/>
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>

    </body>
</html>
