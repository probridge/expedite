Index: src/org/exist/http/urlrewrite/URLRewrite.java
===================================================================
--- src/org/exist/http/urlrewrite/URLRewrite.java	(revision 13502)
+++ src/org/exist/http/urlrewrite/URLRewrite.java	(working copy)
@@ -207,4 +207,4 @@
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/http/urlrewrite/RewriteConfig.java
===================================================================
--- src/org/exist/http/urlrewrite/RewriteConfig.java	(revision 13502)
+++ src/org/exist/http/urlrewrite/RewriteConfig.java	(working copy)
@@ -250,7 +250,7 @@
     }
 
     private Document parseConfig(File file) throws ParserConfigurationException, SAXException, IOException {
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         InputSource src = new InputSource(new FileInputStream(file));
         SAXParser parser = factory.newSAXParser();
@@ -262,4 +262,4 @@
 
         return adapter.getDocument();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/http/RESTServer.java
===================================================================
--- src/org/exist/http/RESTServer.java	(revision 13502)
+++ src/org/exist/http/RESTServer.java	(working copy)
@@ -805,7 +805,7 @@
 
 	private ElementImpl parseXML(String content, NamespaceExtractor nsExtractor) throws ParserConfigurationException, SAXException, IOException
 	{
-		SAXParserFactory factory = SAXParserFactory.newInstance();
+		SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		factory.setNamespaceAware(true);
 		InputSource src = new InputSource(new StringReader(content));
 		SAXParser parser = factory.newSAXParser();
Index: src/org/exist/http/servlets/RedirectorServlet.java
===================================================================
--- src/org/exist/http/servlets/RedirectorServlet.java	(revision 13502)
+++ src/org/exist/http/servlets/RedirectorServlet.java	(working copy)
@@ -311,4 +311,4 @@
             return null;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/http/servlets/Authenticator.java
===================================================================
--- src/org/exist/http/servlets/Authenticator.java	(revision 13502)
+++ src/org/exist/http/servlets/Authenticator.java	(working copy)
@@ -55,4 +55,4 @@
 	 */
 	public void sendChallenge(HttpServletRequest request,
 			HttpServletResponse response) throws IOException;
-}
\ No newline at end of file
+}
Index: src/org/exist/http/servlets/SessionWrapper.java
===================================================================
--- src/org/exist/http/servlets/SessionWrapper.java	(revision 13502)
+++ src/org/exist/http/servlets/SessionWrapper.java	(working copy)
@@ -50,4 +50,4 @@
 	public void setAttribute(String arg0, Object arg1);
 	
 	public void setMaxInactiveInterval(int arg0);
-}
\ No newline at end of file
+}
Index: src/org/exist/http/SOAPServer.java
===================================================================
--- src/org/exist/http/SOAPServer.java	(revision 13502)
+++ src/org/exist/http/SOAPServer.java	(working copy)
@@ -725,7 +725,7 @@
 	private Document BuildXMLDocument(byte[] buf) throws SAXException, ParserConfigurationException, IOException
 	{
 		//try and construct xml document from input stream, we use eXist's in-memory DOM implementation
-		SAXParserFactory factory = SAXParserFactory.newInstance();
+		SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		factory.setNamespaceAware(true);	
 		//TODO we should be able to cope with context.getBaseURI()				
 		InputSource src = new InputSource(new ByteArrayInputStream(buf));
Index: src/org/exist/http/Descriptor.java
===================================================================
--- src/org/exist/http/Descriptor.java	(revision 13502)
+++ src/org/exist/http/Descriptor.java	(working copy)
@@ -121,7 +121,7 @@
             // initialize xml parser
             // we use eXist's in-memory DOM implementation to work
             // around a bug in Xerces
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             
             InputSource src = new InputSource(is);
Index: src/org/exist/http/Response.java
===================================================================
--- src/org/exist/http/Response.java	(revision 13502)
+++ src/org/exist/http/Response.java	(working copy)
@@ -123,4 +123,4 @@
 		os.flush();
 		os.close();
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/http/SessionManager.java
===================================================================
--- src/org/exist/http/SessionManager.java	(revision 13502)
+++ src/org/exist/http/SessionManager.java	(working copy)
@@ -124,4 +124,4 @@
             }
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/stax/EmbeddedXMLStreamReader.java
===================================================================
--- src/org/exist/stax/EmbeddedXMLStreamReader.java	(revision 13502)
+++ src/org/exist/stax/EmbeddedXMLStreamReader.java	(working copy)
@@ -682,4 +682,4 @@
             currentChild++;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/validation/GrammarPool.java
===================================================================
--- src/org/exist/validation/GrammarPool.java	(revision 13502)
+++ src/org/exist/validation/GrammarPool.java	(working copy)
@@ -22,10 +22,10 @@
 package org.exist.validation;
 
 import org.apache.log4j.Logger;
-import org.apache.xerces.util.XMLGrammarPoolImpl;
-import org.apache.xerces.xni.grammars.Grammar;
-import org.apache.xerces.xni.grammars.XMLGrammarDescription;
-import org.apache.xerces.xni.grammars.XMLGrammarPool;
+import orbeon.apache.xerces.util.XMLGrammarPoolImpl;
+import orbeon.apache.xerces.xni.grammars.Grammar;
+import orbeon.apache.xerces.xni.grammars.XMLGrammarDescription;
+import orbeon.apache.xerces.xni.grammars.XMLGrammarPool;
 import org.exist.Namespaces;
 
 /**
@@ -34,10 +34,10 @@
  *
  * @author Dannes Wessels (dizzzz@exist-db.org)
  *
- * @see org.apache.xerces.xni.grammars.XMLGrammarPool
- * @see org.apache.xerces.util.XMLGrammarPoolImpl
- * @see org.apache.xerces.xni.grammars.Grammar
- * @see org.apache.xerces.xni.grammars.XMLGrammarDescription
+ * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool
+ * @see orbeon.apache.xerces.util.XMLGrammarPoolImpl
+ * @see orbeon.apache.xerces.xni.grammars.Grammar
+ * @see orbeon.apache.xerces.xni.grammars.XMLGrammarDescription
  */
 public class GrammarPool implements XMLGrammarPool {
     
@@ -70,10 +70,10 @@
      * by a validator before the validation starts. the application can provide 
      * an initial set of grammars available to the current validation attempt.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#retrieveInitialGrammarSet(String)
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#retrieveInitialGrammarSet(String)
      * 
      * @param   type  The type of the grammar, from the 
-     *          org.apache.xerces.xni.grammars.Grammar interface.
+     *          orbeon.apache.xerces.xni.grammars.Grammar interface.
      * @return  The set of grammars the validator may put in its "bucket"
      */
     public Grammar[] retrieveInitialGrammarSet(String type) {
@@ -89,7 +89,7 @@
     /**
      *  Return the final set of grammars that the validator ended up with.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#cacheGrammars(String,Grammar[])
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#cacheGrammars(String,Grammar[])
      * 
      * @param type      The type of the grammars being returned
      * @param grammar   an array containing the set of grammars being 
@@ -106,7 +106,7 @@
      * cacheGrammars(String, Grammar[]) method is called. This is the default 
      * state of the object.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#unlockPool
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#unlockPool
      */
     public void unlockPool() {
         if (logger.isDebugEnabled())
@@ -121,7 +121,7 @@
      * EntityResolver. An application must not call its EntityResolver itself 
      * from this method; this may result in infinite recursions.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#retrieveGrammar(XMLGrammarDescription)
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#retrieveGrammar(XMLGrammarDescription)
      *
      * @param xgd    The description of the Grammar being requested.
      * @return       the Grammar corresponding to this description or null 
@@ -152,7 +152,7 @@
      *  Causes the XMLGrammarPool not to store any grammars when the 
      * cacheGrammars(String, Grammar[[]) method is called.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#lockPool
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#lockPool
      */
     public void lockPool() {
         if (logger.isDebugEnabled())
@@ -163,7 +163,7 @@
     /**
      *  Removes all grammars from the pool.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#clear
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#clear
      */
     public void clear() {
         if (logger.isDebugEnabled())
@@ -174,7 +174,7 @@
     /**
      *  Removes all DTD grammars from the pool. Workaround for Xerces bug.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#clear
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#clear
      */
     public void clearDTDs() {
         //if (logger.isDebugEnabled())
Index: src/org/exist/validation/resolver/SearchResourceResolver.java
===================================================================
--- src/org/exist/validation/resolver/SearchResourceResolver.java	(revision 13502)
+++ src/org/exist/validation/resolver/SearchResourceResolver.java	(working copy)
@@ -27,10 +27,10 @@
 import java.net.URL;
 
 import org.apache.log4j.Logger;
-import org.apache.xerces.xni.XMLResourceIdentifier;
-import org.apache.xerces.xni.XNIException;
-import org.apache.xerces.xni.parser.XMLEntityResolver;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.xni.XMLResourceIdentifier;
+import orbeon.apache.xerces.xni.XNIException;
+import orbeon.apache.xerces.xni.parser.XMLEntityResolver;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 import org.exist.security.SecurityManager;
 import org.exist.security.User;
 import org.exist.storage.BrokerPool;
Index: src/org/exist/validation/resolver/AnyUriResolver.java
===================================================================
--- src/org/exist/validation/resolver/AnyUriResolver.java	(revision 13502)
+++ src/org/exist/validation/resolver/AnyUriResolver.java	(working copy)
@@ -28,10 +28,10 @@
 
 import org.apache.log4j.Logger;
 
-import org.apache.xerces.xni.XMLResourceIdentifier;
-import org.apache.xerces.xni.XNIException;
-import org.apache.xerces.xni.parser.XMLEntityResolver;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.xni.XMLResourceIdentifier;
+import orbeon.apache.xerces.xni.XNIException;
+import orbeon.apache.xerces.xni.parser.XMLEntityResolver;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 
 import org.exist.protocolhandler.embedded.EmbeddedInputStream;
 import org.exist.protocolhandler.xmldb.XmldbURL;
Index: src/org/exist/validation/resolver/eXistXMLCatalogResolver.java
===================================================================
--- src/org/exist/validation/resolver/eXistXMLCatalogResolver.java	(revision 13502)
+++ src/org/exist/validation/resolver/eXistXMLCatalogResolver.java	(working copy)
@@ -29,17 +29,17 @@
 import java.util.List;
 
 import org.apache.log4j.Logger;
-import org.apache.xerces.util.XMLCatalogResolver;
-import org.apache.xerces.xni.XMLResourceIdentifier;
-import org.apache.xerces.xni.XNIException;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.util.XMLCatalogResolver;
+import orbeon.apache.xerces.xni.XMLResourceIdentifier;
+import orbeon.apache.xerces.xni.XNIException;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 import org.w3c.dom.ls.LSInput;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 
 /**
  *  Wrapper around xerces2's
- *  <a href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/org/apache/xerces/util/XMLCatalogResolver.html"
+ *  <a href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/orbeon.apache.xerces/util/XMLCatalogResolver.html"
  *                                                      >XMLCatalogresolver</a>
  * @author Dannes Wessels (dizzzz@exist-db.org)
  */
@@ -84,7 +84,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String)
      */
     public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {
         LOG.debug("Resolving publicId='"+publicId+"', systemId='"+systemId+"'");
@@ -134,7 +134,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveResource(String, String, String, String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveResource(String, String, String, String, String)
      */
     public LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {
         LOG.debug("Resolving type='"+type+"', namespaceURI='"+namespaceURI+"', publicId='"+publicId+"', systemId='"+systemId+"', baseURI='"+baseURI+"'");
@@ -150,7 +150,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String, String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String, String, String)
      */
     public InputSource resolveEntity(String name, String publicId, String baseURI, String systemId) throws SAXException, IOException {
         LOG.debug("Resolving name='"+name+"', publicId='"+publicId+"', baseURI='"+baseURI+"', systemId='"+systemId+"'");
@@ -166,7 +166,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveIdentifier(XMLResourceIdentifier)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveIdentifier(XMLResourceIdentifier)
      */
     public String resolveIdentifier(XMLResourceIdentifier xri) throws IOException, XNIException {
         
@@ -187,7 +187,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveEntity(XMLResourceIdentifier)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveEntity(XMLResourceIdentifier)
      */
     public XMLInputSource resolveEntity(XMLResourceIdentifier xri) throws XNIException, IOException {
         if(xri.getExpandedSystemId()==null && xri.getLiteralSystemId()==null && 
@@ -212,7 +212,7 @@
     }
 
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#getExternalSubset(String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#getExternalSubset(String, String)
      */
     public InputSource getExternalSubset(String name, String baseURI) throws SAXException, IOException {
         LOG.debug("name='"+name+"' baseURI='"+baseURI+"'");
Index: src/org/exist/validation/ValidationContentHandler.java
===================================================================
--- src/org/exist/validation/ValidationContentHandler.java	(revision 13502)
+++ src/org/exist/validation/ValidationContentHandler.java	(working copy)
@@ -59,4 +59,4 @@
     public String getNamespaceUri(){
         return namespaceUri;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/validation/Validator.java
===================================================================
--- src/org/exist/validation/Validator.java	(revision 13502)
+++ src/org/exist/validation/Validator.java	(working copy)
@@ -265,7 +265,7 @@
             ErrorHandler errorHandler) throws ParserConfigurationException, SAXException {
 
         // setup sax factory ; be sure just one instance!
-        SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+        SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 
         // Enable validation stuff
         saxFactory.setValidating(true);
Index: src/org/exist/validation/XmlLibraryChecker.java
===================================================================
--- src/org/exist/validation/XmlLibraryChecker.java	(revision 13502)
+++ src/org/exist/validation/XmlLibraryChecker.java	(working copy)
@@ -44,8 +44,8 @@
      * Possible XML Parsers, at least one must be valid
      */
     private final static ClassVersion[] validParsers = {
-        new ClassVersion("Xerces", "Xerces-J 2.9.1", 
-                "org.apache.xerces.impl.Version.getVersion()")
+        new ClassVersion("Xerces", "Xerces-J 2.9.0",
+                "orbeon.apache.xerces.impl.Version.getVersion()")
     };
     
     /**
@@ -53,7 +53,7 @@
      */
     private final static ClassVersion[] validTransformers = {
         new ClassVersion("Saxon", "8.9.0", 
-                "net.sf.saxon.Version.getProductVersion()"),
+                "org.orbeon.saxon.Version.getProductVersion()"),
         new ClassVersion("Xalan", "Xalan Java 2.7.1", 
                 "org.apache.xalan.Version.getVersion()"),
     };
Index: src/org/exist/webstart/JnlpServlet.java
===================================================================
--- src/org/exist/webstart/JnlpServlet.java	(revision 13502)
+++ src/org/exist/webstart/JnlpServlet.java	(working copy)
@@ -113,4 +113,4 @@
         }
         
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/XPathException.java
===================================================================
--- src/org/exist/xquery/XPathException.java	(revision 13502)
+++ src/org/exist/xquery/XPathException.java	(working copy)
@@ -184,4 +184,4 @@
             return buf.toString();
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/LocationStep.java
===================================================================
--- src/org/exist/xquery/LocationStep.java	(revision 13502)
+++ src/org/exist/xquery/LocationStep.java	(working copy)
@@ -1433,4 +1433,4 @@
             return true;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/DescendantOrSelfSelector.java
===================================================================
--- src/org/exist/xquery/DescendantOrSelfSelector.java	(revision 13502)
+++ src/org/exist/xquery/DescendantOrSelfSelector.java	(working copy)
@@ -47,4 +47,4 @@
             p.copyContext(contextNode);
         return p;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/DynamicTypeCheck.java
===================================================================
--- src/org/exist/xquery/DynamicTypeCheck.java	(revision 13502)
+++ src/org/exist/xquery/DynamicTypeCheck.java	(working copy)
@@ -209,4 +209,4 @@
     public void accept(ExpressionVisitor visitor) {
 		expression.accept(visitor);
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/value/BinaryValue.java
===================================================================
--- src/org/exist/xquery/value/BinaryValue.java	(revision 13502)
+++ src/org/exist/xquery/value/BinaryValue.java	(working copy)
@@ -108,4 +108,4 @@
         }
         return (a1len - a2len);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/value/MixedNodeValueComparator.java
===================================================================
--- src/org/exist/xquery/value/MixedNodeValueComparator.java	(revision 13502)
+++ src/org/exist/xquery/value/MixedNodeValueComparator.java	(working copy)
@@ -49,4 +49,4 @@
                 return 1;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/value/Base64Binary.java
===================================================================
--- src/org/exist/xquery/value/Base64Binary.java	(revision 13502)
+++ src/org/exist/xquery/value/Base64Binary.java	(working copy)
@@ -94,4 +94,4 @@
         throw new XPathException("FORG0006: value of type " + Type.getTypeName(getType()) +
             " has no boolean value.");
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/Pragma.java
===================================================================
--- src/org/exist/xquery/Pragma.java	(revision 13502)
+++ src/org/exist/xquery/Pragma.java	(working copy)
@@ -61,4 +61,4 @@
     public String toString() {
         return "(# " + qname + ' ' + contents + "#)";
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/pragmas/Optimize.java
===================================================================
--- src/org/exist/xquery/pragmas/Optimize.java	(revision 13502)
+++ src/org/exist/xquery/pragmas/Optimize.java	(working copy)
@@ -296,4 +296,4 @@
         }
         return indexType;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/CompiledXQuery.java
===================================================================
--- src/org/exist/xquery/CompiledXQuery.java	(revision 13502)
+++ src/org/exist/xquery/CompiledXQuery.java	(working copy)
@@ -74,4 +74,4 @@
      * @return This query's source
      */
     public XACMLSource getSource();
-} 
\ No newline at end of file
+} 
Index: src/org/exist/xquery/TreatAsExpression.java
===================================================================
--- src/org/exist/xquery/TreatAsExpression.java	(revision 13502)
+++ src/org/exist/xquery/TreatAsExpression.java	(working copy)
@@ -80,4 +80,4 @@
         super.setContextDocSet(contextSet);
         expression.setContextDocSet(contextSet);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/StaticXQueryException.java
===================================================================
--- src/org/exist/xquery/StaticXQueryException.java	(revision 13502)
+++ src/org/exist/xquery/StaticXQueryException.java	(working copy)
@@ -23,4 +23,4 @@
 	public StaticXQueryException(int line, int column, String message, Throwable cause) {
 		super(line, column, message, cause);
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/util/RegexTranslator.java
===================================================================
--- src/org/exist/xquery/util/RegexTranslator.java	(revision 13502)
+++ src/org/exist/xquery/util/RegexTranslator.java	(working copy)
@@ -11,7 +11,7 @@
 
 /**
  * This class translates XML Schema regex syntax into JDK 1.4 regex syntax.
- * Copied from Saxon package net.sf.saxon.type without change. The original 
+ * Copied from Saxon package org.orbeon.saxon.type without change. The original 
  * author is James Clark. See license.
  */
 public class RegexTranslator {
@@ -1710,4 +1710,4 @@
 // Portions created by (your name) are Copyright (C) (your legal entity). All Rights Reserved.
 //
 // Contributor(s): Michael Kay
-//
\ No newline at end of file
+//
Index: src/org/exist/xquery/util/Error.java
===================================================================
--- src/org/exist/xquery/util/Error.java	(revision 13502)
+++ src/org/exist/xquery/util/Error.java	(working copy)
@@ -136,4 +136,4 @@
     public Object[] getArgs() {
         return args;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/GeneralComparison.java
===================================================================
--- src/org/exist/xquery/GeneralComparison.java	(revision 13502)
+++ src/org/exist/xquery/GeneralComparison.java	(working copy)
@@ -1006,4 +1006,4 @@
             this.hasIndexOnQNames = false;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/Constants.java
===================================================================
--- src/org/exist/xquery/Constants.java	(revision 13502)
+++ src/org/exist/xquery/Constants.java	(working copy)
@@ -173,4 +173,4 @@
     //
     public final static int NO_SIZE_HINT = -1;
     
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/PerformanceStats.java
===================================================================
--- src/org/exist/xquery/PerformanceStats.java	(revision 13502)
+++ src/org/exist/xquery/PerformanceStats.java	(working copy)
@@ -305,4 +305,4 @@
         functions.clear();
         indexStats.clear();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/LetExpr.java
===================================================================
--- src/org/exist/xquery/LetExpr.java	(revision 13502)
+++ src/org/exist/xquery/LetExpr.java	(working copy)
@@ -414,4 +414,4 @@
     public void accept(ExpressionVisitor visitor) {
         visitor.visitLetExpression(this);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/TypeswitchExpression.java
===================================================================
--- src/org/exist/xquery/TypeswitchExpression.java	(revision 13502)
+++ src/org/exist/xquery/TypeswitchExpression.java	(working copy)
@@ -224,4 +224,4 @@
             caseClause.returnClause.resetState(postOptimization);
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/ForExpr.java
===================================================================
--- src/org/exist/xquery/ForExpr.java	(revision 13502)
+++ src/org/exist/xquery/ForExpr.java	(working copy)
@@ -522,4 +522,4 @@
     public void accept(ExpressionVisitor visitor) {
         visitor.visitForExpression(this);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/PathExpr.java
===================================================================
--- src/org/exist/xquery/PathExpr.java	(revision 13502)
+++ src/org/exist/xquery/PathExpr.java	(working copy)
@@ -473,4 +473,4 @@
 	public void setContext(XQueryContext context) {
 		this.context = context;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/LocalVariable.java
===================================================================
--- src/org/exist/xquery/LocalVariable.java	(revision 13502)
+++ src/org/exist/xquery/LocalVariable.java	(working copy)
@@ -43,4 +43,4 @@
 		this.after = var;
 		var.before = this;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/Step.java
===================================================================
--- src/org/exist/xquery/Step.java	(revision 13502)
+++ src/org/exist/xquery/Step.java	(working copy)
@@ -215,4 +215,4 @@
 			pred.resetState(postOptimization);
 		}
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/InternalFunctionCall.java
===================================================================
--- src/org/exist/xquery/InternalFunctionCall.java	(revision 13502)
+++ src/org/exist/xquery/InternalFunctionCall.java	(working copy)
@@ -225,4 +225,4 @@
     public void accept(ExpressionVisitor visitor) {
         function.accept(visitor);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/InternalModule.java
===================================================================
--- src/org/exist/xquery/InternalModule.java	(revision 13502)
+++ src/org/exist/xquery/InternalModule.java	(working copy)
@@ -54,4 +54,4 @@
 	 * @return all functions defined in this module
 	 */
 	public List getFunctionsByName(QName qname);
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/text/HighlightMatches.java
===================================================================
--- src/org/exist/xquery/functions/text/HighlightMatches.java	(revision 13502)
+++ src/org/exist/xquery/functions/text/HighlightMatches.java	(working copy)
@@ -160,4 +160,4 @@
             }
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/text/FilterNested.java
===================================================================
--- src/org/exist/xquery/functions/text/FilterNested.java	(revision 13502)
+++ src/org/exist/xquery/functions/text/FilterNested.java	(working copy)
@@ -66,4 +66,4 @@
         }
         return filtered;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/text/FuzzyMatcher.java
===================================================================
--- src/org/exist/xquery/functions/text/FuzzyMatcher.java	(revision 13502)
+++ src/org/exist/xquery/functions/text/FuzzyMatcher.java	(working copy)
@@ -106,4 +106,4 @@
         // we got the result!
         return d[n][m];
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/FunRemove.java
===================================================================
--- src/org/exist/xquery/functions/FunRemove.java	(revision 13502)
+++ src/org/exist/xquery/functions/FunRemove.java	(working copy)
@@ -113,4 +113,4 @@
 		return Dependency.NO_DEPENDENCY;
 	}
 
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/FunSum.java
===================================================================
--- src/org/exist/xquery/functions/FunSum.java	(revision 13502)
+++ src/org/exist/xquery/functions/FunSum.java	(working copy)
@@ -141,4 +141,4 @@
 
         return result;        
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/request/GetData.java
===================================================================
--- src/org/exist/xquery/functions/request/GetData.java	(revision 13502)
+++ src/org/exist/xquery/functions/request/GetData.java	(working copy)
@@ -165,7 +165,7 @@
 				try
 				{ 
 					//try and construct xml document from input stream, we use eXist's in-memory DOM implementation
-					SAXParserFactory factory = SAXParserFactory.newInstance();
+					SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 					factory.setNamespaceAware(true);
 					//TODO : we should be able to cope with context.getBaseURI()				
 					InputSource src = new InputSource(new ByteArrayInputStream(bufRequestData));
Index: src/org/exist/xquery/functions/request/GetMethod.java
===================================================================
--- src/org/exist/xquery/functions/request/GetMethod.java	(revision 13502)
+++ src/org/exist/xquery/functions/request/GetMethod.java	(working copy)
@@ -79,4 +79,4 @@
 		} else
 			throw new XPathException(this, "Variable $request is not bound to a Request object.");
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/request/GetHeader.java
===================================================================
--- src/org/exist/xquery/functions/request/GetHeader.java	(revision 13502)
+++ src/org/exist/xquery/functions/request/GetHeader.java	(working copy)
@@ -99,4 +99,4 @@
 			throw new XPathException(
 					"Variable $request is not bound to a Request object.");
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/FunInScopePrefixes.java
===================================================================
--- src/org/exist/xquery/functions/FunInScopePrefixes.java	(revision 13502)
+++ src/org/exist/xquery/functions/FunInScopePrefixes.java	(working copy)
@@ -180,4 +180,4 @@
 		}
     }
 
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/ExtFulltext.java
===================================================================
--- src/org/exist/xquery/functions/ExtFulltext.java	(revision 13502)
+++ src/org/exist/xquery/functions/ExtFulltext.java	(working copy)
@@ -402,4 +402,4 @@
     public void accept(ExpressionVisitor visitor) {
         visitor.visitFtExpression(this);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/util/Eval.java
===================================================================
--- src/org/exist/xquery/functions/util/Eval.java	(revision 13502)
+++ src/org/exist/xquery/functions/util/Eval.java	(working copy)
@@ -476,7 +476,7 @@
 		try {
 			URL url = new URL(uri);
 			InputStreamReader isr = new InputStreamReader(url.openStream(), "UTF-8");
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             InputSource src = new InputSource(isr);
             SAXParser parser = factory.newSAXParser();
Index: src/org/exist/xquery/functions/util/Parse.java
===================================================================
--- src/org/exist/xquery/functions/util/Parse.java	(revision 13502)
+++ src/org/exist/xquery/functions/util/Parse.java	(working copy)
@@ -85,7 +85,7 @@
         }
         StringReader reader = new StringReader(xmlContent);
         try {
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             InputSource src = new InputSource(reader);
 
Index: src/org/exist/xquery/functions/FunIdRef.java
===================================================================
--- src/org/exist/xquery/functions/FunIdRef.java	(revision 13502)
+++ src/org/exist/xquery/functions/FunIdRef.java	(working copy)
@@ -202,4 +202,4 @@
             }
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/system/FunctionAvailable.java
===================================================================
--- src/org/exist/xquery/functions/system/FunctionAvailable.java	(revision 13502)
+++ src/org/exist/xquery/functions/system/FunctionAvailable.java	(working copy)
@@ -87,4 +87,4 @@
         
         return BooleanValue.valueOf(found);
     }    
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/validation/GrammarTooling.java
===================================================================
--- src/org/exist/xquery/functions/validation/GrammarTooling.java	(revision 13502)
+++ src/org/exist/xquery/functions/validation/GrammarTooling.java	(working copy)
@@ -27,10 +27,10 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import org.apache.xerces.parsers.XMLGrammarPreparser;
-import org.apache.xerces.xni.grammars.Grammar;
-import org.apache.xerces.xni.grammars.XMLGrammarDescription;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.parsers.XMLGrammarPreparser;
+import orbeon.apache.xerces.xni.grammars.Grammar;
+import orbeon.apache.xerces.xni.grammars.XMLGrammarDescription;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 
 import org.exist.Namespaces;
 import org.exist.dom.QName;
@@ -315,4 +315,4 @@
             builder.endElement();
             attribs.clear();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/validation/Jaxp.java
===================================================================
--- src/org/exist/xquery/functions/validation/Jaxp.java	(revision 13502)
+++ src/org/exist/xquery/functions/validation/Jaxp.java	(working copy)
@@ -37,7 +37,7 @@
 import javax.xml.transform.stream.StreamResult;
 import javax.xml.transform.stream.StreamSource;
 
-import org.apache.xerces.xni.parser.XMLEntityResolver;
+import orbeon.apache.xerces.xni.parser.XMLEntityResolver;
 
 import org.exist.Namespaces;
 import org.exist.dom.QName;
@@ -304,7 +304,7 @@
     private XMLReader getXMLReader() throws ParserConfigurationException, SAXException {
 
         // setup sax factory ; be sure just one instance!
-        SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+        SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 
         // Enable validation stuff
         saxFactory.setValidating(true);
Index: src/org/exist/xquery/functions/FunCeiling.java
===================================================================
--- src/org/exist/xquery/functions/FunCeiling.java	(revision 13502)
+++ src/org/exist/xquery/functions/FunCeiling.java	(working copy)
@@ -83,4 +83,4 @@
         
         return result;        
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/transform/Transform.java
===================================================================
--- src/org/exist/xquery/functions/transform/Transform.java	(revision 13502)
+++ src/org/exist/xquery/functions/transform/Transform.java	(working copy)
@@ -722,4 +722,4 @@
             throw except;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/xquery/functions/xmldb/XMLDBLoadFromPattern.java
===================================================================
--- src/org/exist/xquery/functions/xmldb/XMLDBLoadFromPattern.java	(revision 13502)
+++ src/org/exist/xquery/functions/xmldb/XMLDBLoadFromPattern.java	(working copy)
@@ -172,4 +172,4 @@
         }
         return stored;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/StandaloneServer.java
===================================================================
--- src/org/exist/StandaloneServer.java	(revision 13502)
+++ src/org/exist/StandaloneServer.java	(working copy)
@@ -420,7 +420,7 @@
         }
         
         // initialize xml parser
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         factory.setValidating(false);
         InputSource src = new InputSource(is);
Index: src/org/exist/storage/lock/MultiReadReentrantLock.java
===================================================================
--- src/org/exist/storage/lock/MultiReadReentrantLock.java	(revision 13502)
+++ src/org/exist/storage/lock/MultiReadReentrantLock.java	(working copy)
@@ -611,4 +611,4 @@
         }
         return buf.toString();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/lock/LockOwner.java
===================================================================
--- src/org/exist/storage/lock/LockOwner.java	(revision 13502)
+++ src/org/exist/storage/lock/LockOwner.java	(working copy)
@@ -49,4 +49,4 @@
     public final Throwable getStack() {
         return stack;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/lock/DeadlockDetection.java
===================================================================
--- src/org/exist/storage/lock/DeadlockDetection.java	(revision 13502)
+++ src/org/exist/storage/lock/DeadlockDetection.java	(working copy)
@@ -275,4 +275,4 @@
         buf.append("]");
         return buf.toString();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/lock/FileLock.java
===================================================================
--- src/org/exist/storage/lock/FileLock.java	(revision 13502)
+++ src/org/exist/storage/lock/FileLock.java	(working copy)
@@ -277,4 +277,4 @@
 	System.err.println(message);
 	return message;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/lock/LockListener.java
===================================================================
--- src/org/exist/storage/lock/LockListener.java	(revision 13502)
+++ src/org/exist/storage/lock/LockListener.java	(working copy)
@@ -6,4 +6,4 @@
 public interface LockListener {
 
     void lockReleased();
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/statistics/DataGuide.java
===================================================================
--- src/org/exist/storage/statistics/DataGuide.java	(revision 13502)
+++ src/org/exist/storage/statistics/DataGuide.java	(working copy)
@@ -158,4 +158,4 @@
             handler.endElement(Namespaces.EXIST_NS, "distribution", "distribution");
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/statistics/IndexStatisticsWorker.java
===================================================================
--- src/org/exist/storage/statistics/IndexStatisticsWorker.java	(revision 13502)
+++ src/org/exist/storage/statistics/IndexStatisticsWorker.java	(working copy)
@@ -218,4 +218,4 @@
             return true;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/IndexSpec.java
===================================================================
--- src/org/exist/storage/IndexSpec.java	(revision 13502)
+++ src/org/exist/storage/IndexSpec.java	(working copy)
@@ -233,4 +233,4 @@
 		return result.toString();
     }
     
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/cache/Cache.java
===================================================================
--- src/org/exist/storage/cache/Cache.java	(revision 13502)
+++ src/org/exist/storage/cache/Cache.java	(working copy)
@@ -162,4 +162,4 @@
     public String getFileName();
 	
 	public final static Logger LOG = Logger.getLogger(Cache.class);
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/cache/Accounting.java
===================================================================
--- src/org/exist/storage/cache/Accounting.java	(revision 13502)
+++ src/org/exist/storage/cache/Accounting.java	(working copy)
@@ -172,4 +172,4 @@
                 + "; thrashing: " + getThrashing() 
                 + "; thrashing period: " + checkPeriod);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/UpdateListener.java
===================================================================
--- src/org/exist/storage/UpdateListener.java	(revision 13502)
+++ src/org/exist/storage/UpdateListener.java	(working copy)
@@ -43,4 +43,4 @@
     public void unsubscribe();
 
     public void debug();
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/NativeElementIndex.java
===================================================================
--- src/org/exist/storage/NativeElementIndex.java	(revision 13502)
+++ src/org/exist/storage/NativeElementIndex.java	(working copy)
@@ -1022,4 +1022,4 @@
         " owned by " + broker.toString();
     }
 
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/txn/TransactionManager.java
===================================================================
--- src/org/exist/storage/txn/TransactionManager.java	(revision 13502)
+++ src/org/exist/storage/txn/TransactionManager.java	(working copy)
@@ -260,4 +260,4 @@
             lock.unlock();
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/txn/Txn.java
===================================================================
--- src/org/exist/storage/txn/Txn.java	(revision 13502)
+++ src/org/exist/storage/txn/Txn.java	(working copy)
@@ -71,4 +71,4 @@
             this.lockMode = lockMode;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/GeneralRangeIndexSpec.java
===================================================================
--- src/org/exist/storage/GeneralRangeIndexSpec.java	(revision 13502)
+++ src/org/exist/storage/GeneralRangeIndexSpec.java	(working copy)
@@ -79,4 +79,4 @@
 		result.append("\thas range index : ").append(hasRangeIndex(this.type)).append('\n');			
   	 	return result.toString();
     }    
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/dom/NodeIterator.java
===================================================================
--- src/org/exist/storage/dom/NodeIterator.java	(revision 13502)
+++ src/org/exist/storage/dom/NodeIterator.java	(working copy)
@@ -281,4 +281,4 @@
 	public void setTo(long address) {
 		this.startAddress = address;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/dom/RecordPos.java
===================================================================
--- src/org/exist/storage/dom/RecordPos.java	(revision 13502)
+++ src/org/exist/storage/dom/RecordPos.java	(working copy)
@@ -62,4 +62,4 @@
 	public boolean isLink() {
 		return isLink;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/dom/WriteOverflowPageLoggable.java
===================================================================
--- src/org/exist/storage/dom/WriteOverflowPageLoggable.java	(revision 13502)
+++ src/org/exist/storage/dom/WriteOverflowPageLoggable.java	(working copy)
@@ -102,4 +102,4 @@
 	public String dump() {
 		return super.dump() + " - writing overflow page " + pageNum + "; next: " + nextPage;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/dom/ItemId.java
===================================================================
--- src/org/exist/storage/dom/ItemId.java	(revision 13502)
+++ src/org/exist/storage/dom/ItemId.java	(working copy)
@@ -78,4 +78,4 @@
 	public final static boolean isOrdinaryRecord(short id) {
 	    return (id & LINK_OR_RELOCATED_MASK) == 0;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/dom/CreatePageLoggable.java
===================================================================
--- src/org/exist/storage/dom/CreatePageLoggable.java	(revision 13502)
+++ src/org/exist/storage/dom/CreatePageLoggable.java	(working copy)
@@ -96,4 +96,4 @@
 		return super.dump() + " - new page created: " + newPage + "; prev. page: " + prevPage + "; next page: " +
             nextPage;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/SystemTaskManager.java
===================================================================
--- src/org/exist/storage/SystemTaskManager.java	(revision 13502)
+++ src/org/exist/storage/SystemTaskManager.java	(working copy)
@@ -72,4 +72,4 @@
             waitingSystemTasks.clear();
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/DefaultCacheManager.java
===================================================================
--- src/org/exist/storage/DefaultCacheManager.java	(revision 13502)
+++ src/org/exist/storage/DefaultCacheManager.java	(working copy)
@@ -303,4 +303,4 @@
             LOG.warn("Exception while registering cache mbean.", e);
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/SystemTask.java
===================================================================
--- src/org/exist/storage/SystemTask.java	(revision 13502)
+++ src/org/exist/storage/SystemTask.java	(working copy)
@@ -57,4 +57,4 @@
 	 * @throws EXistException
 	 */
 	void execute(DBBroker broker) throws EXistException;
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/serializers/XIncludeFilter.java
===================================================================
--- src/org/exist/storage/serializers/XIncludeFilter.java	(revision 13502)
+++ src/org/exist/storage/serializers/XIncludeFilter.java	(working copy)
@@ -505,7 +505,7 @@
         }
 
         // we use eXist's in-memory DOM implementation
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         InputSource src = new InputSource(con.getInputStream());
         SAXParser parser = factory.newSAXParser();
Index: src/org/exist/storage/serializers/CustomMatchListenerFactory.java
===================================================================
--- src/org/exist/storage/serializers/CustomMatchListenerFactory.java	(revision 13502)
+++ src/org/exist/storage/serializers/CustomMatchListenerFactory.java	(working copy)
@@ -60,4 +60,4 @@
     public MatchListener getLast() {
         return last;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/serializers/CustomMatchListener.java
===================================================================
--- src/org/exist/storage/serializers/CustomMatchListener.java	(revision 13502)
+++ src/org/exist/storage/serializers/CustomMatchListener.java	(working copy)
@@ -26,4 +26,4 @@
     protected DBBroker getBroker() {
         return broker;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/RegexMatcher.java
===================================================================
--- src/org/exist/storage/RegexMatcher.java	(revision 13502)
+++ src/org/exist/storage/RegexMatcher.java	(working copy)
@@ -71,4 +71,4 @@
         matcher.reset(term);
         return matchAll ? matcher.matches() : matcher.find();
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/index/OverflowAppendLoggable.java
===================================================================
--- src/org/exist/storage/index/OverflowAppendLoggable.java	(revision 13502)
+++ src/org/exist/storage/index/OverflowAppendLoggable.java	(working copy)
@@ -98,4 +98,4 @@
 	public String dump() {
 		return super.dump() + " - append to overflow page " + pageNum;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/io/VariableByteArrayInput.java
===================================================================
--- src/org/exist/storage/io/VariableByteArrayInput.java	(revision 13502)
+++ src/org/exist/storage/io/VariableByteArrayInput.java	(working copy)
@@ -186,4 +186,4 @@
     	buf.append("]");
     	return buf.toString();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/io/VariableByteInput.java
===================================================================
--- src/org/exist/storage/io/VariableByteInput.java	(revision 13502)
+++ src/org/exist/storage/io/VariableByteInput.java	(working copy)
@@ -128,4 +128,4 @@
     
     public void copyRaw(VariableByteOutputStream os, int bytes)
     	throws IOException;
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/io/AbstractVariableByteInput.java
===================================================================
--- src/org/exist/storage/io/AbstractVariableByteInput.java	(revision 13502)
+++ src/org/exist/storage/io/AbstractVariableByteInput.java	(working copy)
@@ -175,4 +175,4 @@
      */
     public void release() {
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/storage/CacheManager.java
===================================================================
--- src/org/exist/storage/CacheManager.java	(revision 13502)
+++ src/org/exist/storage/CacheManager.java	(working copy)
@@ -72,4 +72,4 @@
     long getMaxSingle();
 
     long getCurrentSize();
-}
\ No newline at end of file
+}
Index: src/org/exist/xupdate/Update.java
===================================================================
--- src/org/exist/xupdate/Update.java	(revision 13502)
+++ src/org/exist/xupdate/Update.java	(working copy)
@@ -138,4 +138,4 @@
         return XUpdateProcessor.UPDATE;
     }
 
-}
\ No newline at end of file
+}
Index: src/org/exist/xupdate/Insert.java
===================================================================
--- src/org/exist/xupdate/Insert.java	(revision 13502)
+++ src/org/exist/xupdate/Insert.java	(working copy)
@@ -123,4 +123,4 @@
         return (mode == INSERT_BEFORE ? "insert-before" : "insert-after");
     }
 
-}
\ No newline at end of file
+}
Index: src/org/exist/xupdate/Rename.java
===================================================================
--- src/org/exist/xupdate/Rename.java	(revision 13502)
+++ src/org/exist/xupdate/Rename.java	(working copy)
@@ -124,4 +124,4 @@
         return "rename";
     }
 
-}
\ No newline at end of file
+}
Index: src/org/exist/xupdate/Remove.java
===================================================================
--- src/org/exist/xupdate/Remove.java	(revision 13502)
+++ src/org/exist/xupdate/Remove.java	(working copy)
@@ -105,4 +105,4 @@
 		return "remove";
 	}
 
-}
\ No newline at end of file
+}
Index: src/org/exist/dom/NodeHandle.java
===================================================================
--- src/org/exist/dom/NodeHandle.java	(revision 13502)
+++ src/org/exist/dom/NodeHandle.java	(working copy)
@@ -19,4 +19,4 @@
 
 	public DocumentImpl getDocument();
 
-}
\ No newline at end of file
+}
Index: src/org/exist/dom/CharacterDataImpl.java
===================================================================
--- src/org/exist/dom/CharacterDataImpl.java	(revision 13502)
+++ src/org/exist/dom/CharacterDataImpl.java	(working copy)
@@ -169,4 +169,4 @@
         final int nodeIdLen = nodeId.size();
         return value.getLength() - 3 - nodeIdLen;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/dom/Visitable.java
===================================================================
--- src/org/exist/dom/Visitable.java	(revision 13502)
+++ src/org/exist/dom/Visitable.java	(working copy)
@@ -40,4 +40,4 @@
      * @deprecated
      */
     public boolean accept(Iterator iterator, NodeVisitor visitor);  
-}
\ No newline at end of file
+}
Index: src/org/exist/numbering/NodeIdFactory.java
===================================================================
--- src/org/exist/numbering/NodeIdFactory.java	(revision 13502)
+++ src/org/exist/numbering/NodeIdFactory.java	(working copy)
@@ -122,4 +122,4 @@
     NodeId documentNodeId();
     
     void writeEndOfDocument(VariableByteOutputStream os);
-}
\ No newline at end of file
+}
Index: src/org/exist/source/BinarySource.java
===================================================================
--- src/org/exist/source/BinarySource.java	(revision 13502)
+++ src/org/exist/source/BinarySource.java	(working copy)
@@ -54,4 +54,4 @@
             }
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/source/StringSourceWithMapKey.java
===================================================================
--- src/org/exist/source/StringSourceWithMapKey.java	(revision 13502)
+++ src/org/exist/source/StringSourceWithMapKey.java	(working copy)
@@ -39,4 +39,4 @@
     }
 
     public String getContent() throws IOException {return map.get("<query>");}
-}
\ No newline at end of file
+}
Index: src/org/exist/source/ClassLoaderSource.java
===================================================================
--- src/org/exist/source/ClassLoaderSource.java	(revision 13502)
+++ src/org/exist/source/ClassLoaderSource.java	(working copy)
@@ -50,4 +50,4 @@
             throw new IOException("Source not found: " + source);
         setURL(url);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/backup/ZipWriter.java
===================================================================
--- src/org/exist/backup/ZipWriter.java	(revision 13502)
+++ src/org/exist/backup/ZipWriter.java	(working copy)
@@ -84,4 +84,4 @@
     		return path.substring(1);
     	return path;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/backup/BackupWriter.java
===================================================================
--- src/org/exist/backup/BackupWriter.java	(revision 13502)
+++ src/org/exist/backup/BackupWriter.java	(working copy)
@@ -26,4 +26,4 @@
     void close() throws IOException;
 
     void setProperties(Properties properties) throws IOException;
-}
\ No newline at end of file
+}
Index: src/org/exist/backup/RawDataBackup.java
===================================================================
--- src/org/exist/backup/RawDataBackup.java	(revision 13502)
+++ src/org/exist/backup/RawDataBackup.java	(working copy)
@@ -19,4 +19,4 @@
     public OutputStream newEntry(String name) throws IOException;
 
     public void closeEntry() throws IOException;
-}
\ No newline at end of file
+}
Index: src/org/exist/backup/xquery/ListBackups.java
===================================================================
--- src/org/exist/backup/xquery/ListBackups.java	(revision 13502)
+++ src/org/exist/backup/xquery/ListBackups.java	(working copy)
@@ -127,4 +127,4 @@
             context.popDocumentContext();
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/backup/Restore.java
===================================================================
--- src/org/exist/backup/Restore.java	(revision 13502)
+++ src/org/exist/backup/Restore.java	(working copy)
@@ -79,7 +79,7 @@
 		if (newAdminPass != null)
 			setAdminCredentials(newAdminPass);
 		
-		SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+		SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		saxFactory.setNamespaceAware(true);
 		saxFactory.setValidating(false);
 		SAXParser sax = saxFactory.newSAXParser();
Index: src/org/exist/backup/ErrorReport.java
===================================================================
--- src/org/exist/backup/ErrorReport.java	(revision 13502)
+++ src/org/exist/backup/ErrorReport.java	(working copy)
@@ -169,4 +169,4 @@
             return super.toString() + "\nDocument ID: " + documentId;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/backup/AbstractBackupDescriptor.java
===================================================================
--- src/org/exist/backup/AbstractBackupDescriptor.java	(revision 13502)
+++ src/org/exist/backup/AbstractBackupDescriptor.java	(working copy)
@@ -62,7 +62,7 @@
     }
 
     public void parse(ContentHandler handler) throws IOException, SAXException, ParserConfigurationException {
-        SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+        SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         saxFactory.setNamespaceAware(true);
         saxFactory.setValidating(false);
         SAXParser sax = saxFactory.newSAXParser();
Index: src/org/exist/indexing/IndexWorker.java
===================================================================
--- src/org/exist/indexing/IndexWorker.java	(revision 13502)
+++ src/org/exist/indexing/IndexWorker.java	(working copy)
@@ -204,4 +204,4 @@
     
     //TODO : a scanIndex() method that would return an unaggregated list of index entries ?
 
-}
\ No newline at end of file
+}
Index: src/org/exist/indexing/StreamListener.java
===================================================================
--- src/org/exist/indexing/StreamListener.java	(revision 13502)
+++ src/org/exist/indexing/StreamListener.java	(working copy)
@@ -112,4 +112,4 @@
      */
     void endElement(Txn transaction, ElementImpl element, NodePath path);    
     
-}
\ No newline at end of file
+}
Index: src/org/exist/indexing/IndexManager.java
===================================================================
--- src/org/exist/indexing/IndexManager.java	(revision 13502)
+++ src/org/exist/indexing/IndexManager.java	(working copy)
@@ -221,4 +221,4 @@
                 ((RawBackupSupport)index).backupToArchive(backup);
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/indexing/MatchListener.java
===================================================================
--- src/org/exist/indexing/MatchListener.java	(revision 13502)
+++ src/org/exist/indexing/MatchListener.java	(working copy)
@@ -34,4 +34,4 @@
      * @return the last receiver in the chain
      */
     Receiver getLastInChain();
-}
\ No newline at end of file
+}
Index: src/org/exist/indexing/Index.java
===================================================================
--- src/org/exist/indexing/Index.java	(revision 13502)
+++ src/org/exist/indexing/Index.java	(working copy)
@@ -120,4 +120,4 @@
      * The definition of "consistency" is left to the user.
      */
     boolean checkIndex(DBBroker broker);
-}
\ No newline at end of file
+}
Index: src/org/exist/indexing/IndexController.java
===================================================================
--- src/org/exist/indexing/IndexController.java	(revision 13502)
+++ src/org/exist/indexing/IndexController.java	(working copy)
@@ -412,4 +412,4 @@
         return first;
     }    
 
-}
\ No newline at end of file
+}
Index: src/org/exist/xmldb/XPathQueryServiceImpl.java
===================================================================
--- src/org/exist/xmldb/XPathQueryServiceImpl.java	(revision 13502)
+++ src/org/exist/xmldb/XPathQueryServiceImpl.java	(working copy)
@@ -107,4 +107,4 @@
      * locks may not be released properly.
 	 */
 	public void endProtected();
-}
\ No newline at end of file
+}
Index: src/org/exist/xmldb/CollectionImpl.java
===================================================================
--- src/org/exist/xmldb/CollectionImpl.java	(revision 13502)
+++ src/org/exist/xmldb/CollectionImpl.java	(working copy)
@@ -49,4 +49,4 @@
 	public XmldbURI getPathURI();
 	
 	
-}
\ No newline at end of file
+}
Index: src/org/exist/xmldb/RemoteXMLResource.java
===================================================================
--- src/org/exist/xmldb/RemoteXMLResource.java	(revision 13502)
+++ src/org/exist/xmldb/RemoteXMLResource.java	(working copy)
@@ -201,7 +201,7 @@
     	
         XMLReader reader = xmlReader;
 		if (reader == null) {
-		    SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+		    SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		    saxFactory.setNamespaceAware(true);
 		    saxFactory.setValidating(false);
             try {
Index: src/org/exist/xmldb/DatabaseInstanceManager.java
===================================================================
--- src/org/exist/xmldb/DatabaseInstanceManager.java	(revision 13502)
+++ src/org/exist/xmldb/DatabaseInstanceManager.java	(working copy)
@@ -50,4 +50,4 @@
 	 * @return True if XACML is enabled
 	 */
 	public boolean isXACMLEnabled() throws XMLDBException;
-}
\ No newline at end of file
+}
Index: src/org/exist/debuggee/CommandContinuation.java
===================================================================
--- src/org/exist/debuggee/CommandContinuation.java	(revision 13502)
+++ src/org/exist/debuggee/CommandContinuation.java	(working copy)
@@ -56,4 +56,4 @@
 
 	//close session
 	public void disconnect();
-}
\ No newline at end of file
+}
Index: src/org/exist/fulltext/FTIndex.java
===================================================================
--- src/org/exist/fulltext/FTIndex.java	(revision 13502)
+++ src/org/exist/fulltext/FTIndex.java	(working copy)
@@ -118,4 +118,4 @@
         db.backupToStream(os);
         backup.closeEntry();
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/fulltext/FTMatch.java
===================================================================
--- src/org/exist/fulltext/FTMatch.java	(revision 13502)
+++ src/org/exist/fulltext/FTMatch.java	(working copy)
@@ -49,4 +49,4 @@
     public String getIndexId() {
         return FTIndex.ID;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/fulltext/FTIndexWorker.java
===================================================================
--- src/org/exist/fulltext/FTIndexWorker.java	(revision 13502)
+++ src/org/exist/fulltext/FTIndexWorker.java	(working copy)
@@ -273,4 +273,4 @@
             return FTIndexWorker.this;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/security/XmldbPrincipal.java
===================================================================
--- src/org/exist/security/XmldbPrincipal.java	(revision 13502)
+++ src/org/exist/security/XmldbPrincipal.java	(working copy)
@@ -13,4 +13,4 @@
 	
 	public boolean hasRole(String role);
 
-}
\ No newline at end of file
+}
Index: src/org/exist/security/xacml/XACMLConstants.java
===================================================================
--- src/org/exist/security/xacml/XACMLConstants.java	(revision 13502)
+++ src/org/exist/security/xacml/XACMLConstants.java	(working copy)
@@ -256,4 +256,4 @@
 	
 	private XACMLConstants() {}	
 
-}
\ No newline at end of file
+}
Index: src/org/exist/security/xacml/ExistPolicyModule.java
===================================================================
--- src/org/exist/security/xacml/ExistPolicyModule.java	(revision 13502)
+++ src/org/exist/security/xacml/ExistPolicyModule.java	(working copy)
@@ -140,4 +140,4 @@
 			pool.release(broker);
 		}
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/security/xacml/XACMLUtil.java
===================================================================
--- src/org/exist/security/xacml/XACMLUtil.java	(revision 13502)
+++ src/org/exist/security/xacml/XACMLUtil.java	(working copy)
@@ -631,4 +631,4 @@
     public void debug() {
         // left empty
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/security/xacml/RequestHelper.java
===================================================================
--- src/org/exist/security/xacml/RequestHelper.java	(revision 13502)
+++ src/org/exist/security/xacml/RequestHelper.java	(working copy)
@@ -488,4 +488,4 @@
 	}
 
 	RequestHelper() {}
-}
\ No newline at end of file
+}
Index: src/org/exist/management/impl/LockManager.java
===================================================================
--- src/org/exist/management/impl/LockManager.java	(revision 13502)
+++ src/org/exist/management/impl/LockManager.java	(working copy)
@@ -76,4 +76,4 @@
         }
         return data;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/management/impl/DatabaseMBean.java
===================================================================
--- src/org/exist/management/impl/DatabaseMBean.java	(revision 13502)
+++ src/org/exist/management/impl/DatabaseMBean.java	(working copy)
@@ -41,4 +41,4 @@
 
     TabularData getActiveBrokersMap();
 
-}
\ No newline at end of file
+}
Index: src/org/exist/management/impl/ProcessReport.java
===================================================================
--- src/org/exist/management/impl/ProcessReport.java	(revision 13502)
+++ src/org/exist/management/impl/ProcessReport.java	(working copy)
@@ -130,4 +130,4 @@
         }
         return null;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/management/CacheMBean.java
===================================================================
--- src/org/exist/management/CacheMBean.java	(revision 13502)
+++ src/org/exist/management/CacheMBean.java	(working copy)
@@ -38,4 +38,4 @@
     public int getFails();
 
     public String getFileName();
-}
\ No newline at end of file
+}
Index: src/org/exist/util/Configuration.java
===================================================================
--- src/org/exist/util/Configuration.java	(revision 13502)
+++ src/org/exist/util/Configuration.java	(working copy)
@@ -270,7 +270,7 @@
             // initialize xml parser
             // we use eXist's in-memory DOM implementation to work
             // around a bug in Xerces
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
 //            factory.setFeature("http://apache.org/xml/features/validation/schema", true);
 //            factory.setFeature("http://apache.org/xml/features/validation/dynamic", true);
Index: src/org/exist/util/FastByteBuffer.java
===================================================================
--- src/org/exist/util/FastByteBuffer.java	(revision 13502)
+++ src/org/exist/util/FastByteBuffer.java	(working copy)
@@ -754,4 +754,4 @@
     public final int size() {
         return ( m_lastChunk << m_chunkBits ) + m_firstFree;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/util/MimeTable.java
===================================================================
--- src/org/exist/util/MimeTable.java	(revision 13502)
+++ src/org/exist/util/MimeTable.java	(working copy)
@@ -270,7 +270,7 @@
      * @throws IOException 
      */
     private void loadMimeTypes(InputStream stream) throws ParserConfigurationException, SAXException, IOException {
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         factory.setValidating(false);
         InputSource src = new InputSource(stream);
Index: src/org/exist/util/hashtable/SequencedLongHashMap.java
===================================================================
--- src/org/exist/util/hashtable/SequencedLongHashMap.java	(revision 13502)
+++ src/org/exist/util/hashtable/SequencedLongHashMap.java	(working copy)
@@ -326,4 +326,4 @@
 				return new Long(next.key);
 		}
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/util/ExistSAXParserFactory.java
===================================================================
--- src/org/exist/util/ExistSAXParserFactory.java	(revision 13502)
+++ src/org/exist/util/ExistSAXParserFactory.java	(working copy)
@@ -106,7 +106,7 @@
 
         // If no factory could be retrieved, create system default property.
         if (factory == null) {
-            factory = SAXParserFactory.newInstance();
+            factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         }
 
         return factory;
Index: src/org/exist/util/serializer/Receiver.java
===================================================================
--- src/org/exist/util/serializer/Receiver.java	(revision 13502)
+++ src/org/exist/util/serializer/Receiver.java	(working copy)
@@ -71,4 +71,4 @@
     public void setCurrentNode(StoredNode node);
     
     public Document getDocument();
-}
\ No newline at end of file
+}
Index: src/org/exist/util/serializer/DOMStreamer.java
===================================================================
--- src/org/exist/util/serializer/DOMStreamer.java	(revision 13502)
+++ src/org/exist/util/serializer/DOMStreamer.java	(working copy)
@@ -276,4 +276,4 @@
             this.element = element;
         }
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/util/XMLChar.java
===================================================================
--- src/org/exist/util/XMLChar.java	(revision 13502)
+++ src/org/exist/util/XMLChar.java	(working copy)
@@ -1,6 +1,6 @@
 package org.exist.util;
 
-// Copied without change from Xerces module org.apache.xerces.util.XMLChar, version 2.5.0
+// Copied without change from Xerces module orbeon.apache.xerces.util.XMLChar, version 2.5.0
 
 /*
  * The Apache Software License, Version 1.1
Index: src/org/exist/util/Base64Encoder.java
===================================================================
--- src/org/exist/util/Base64Encoder.java	(revision 13502)
+++ src/org/exist/util/Base64Encoder.java	(working copy)
@@ -147,4 +147,4 @@
     public void reset() {
     	out.setLength(0);
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/util/sanity/SanityCheck.java
===================================================================
--- src/org/exist/util/sanity/SanityCheck.java	(revision 13502)
+++ src/org/exist/util/sanity/SanityCheck.java	(working copy)
@@ -92,4 +92,4 @@
         failure.printStackTrace(out);
         LOG.warn(sout.toString());
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/util/MimeType.java
===================================================================
--- src/org/exist/util/MimeType.java	(revision 13502)
+++ src/org/exist/util/MimeType.java	(working copy)
@@ -84,4 +84,4 @@
     public String toString() {
         return name + ": " + description;
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/client/MimeTypeFileFilter.java
===================================================================
--- src/org/exist/client/MimeTypeFileFilter.java	(revision 13502)
+++ src/org/exist/client/MimeTypeFileFilter.java	(working copy)
@@ -64,4 +64,4 @@
 		
 		return description + ")";
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/client/xacml/ResizingTable.java
===================================================================
--- src/org/exist/client/xacml/ResizingTable.java	(revision 13502)
+++ src/org/exist/client/xacml/ResizingTable.java	(working copy)
@@ -125,4 +125,4 @@
 	{
 		return getPreferredSize().width < getParent().getSize().width;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/client/ResourceDescriptor.java
===================================================================
--- src/org/exist/client/ResourceDescriptor.java	(revision 13502)
+++ src/org/exist/client/ResourceDescriptor.java	(working copy)
@@ -94,4 +94,4 @@
         }
     }
     
-}
\ No newline at end of file
+}
Index: src/org/exist/collections/triggers/HistoryTrigger.java
===================================================================
--- src/org/exist/collections/triggers/HistoryTrigger.java	(revision 13502)
+++ src/org/exist/collections/triggers/HistoryTrigger.java	(working copy)
@@ -110,4 +110,4 @@
     public void finish(int event, DBBroker broker, Txn transaction, XmldbURI documentPath, DocumentImpl document)
     {
     }
-}
\ No newline at end of file
+}
Index: src/org/exist/collections/CollectionURI.java
===================================================================
--- src/org/exist/collections/CollectionURI.java	(revision 13502)
+++ src/org/exist/collections/CollectionURI.java	(working copy)
@@ -125,4 +125,4 @@
 		
 		return false;
 	}
-}
\ No newline at end of file
+}
Index: src/org/exist/collections/CollectionConfigurationManager.java
===================================================================
--- src/org/exist/collections/CollectionConfigurationManager.java	(revision 13502)
+++ src/org/exist/collections/CollectionConfigurationManager.java	(working copy)
@@ -146,7 +146,7 @@
      */
     public void testConfiguration(DBBroker broker, String config) throws CollectionConfigurationException {
         try {
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             InputSource src = new InputSource(new StringReader(config));
             SAXParser parser = factory.newSAXParser();
@@ -398,4 +398,4 @@
         }
         LOG.debug(buf.toString());
     }
-}
\ No newline at end of file
+}
Index: build.properties
===================================================================
--- build.properties	(revision 13502)
+++ build.properties	(working copy)
@@ -18,7 +18,7 @@
 # output dir for junit reports
 junit.reports = test
 junit.output = true
-junit.forked.VM.maxmemory = 300m
+junit.forked.VM.maxmemory = 1024m
 proxy.nonproxyhosts = 
 proxy.host =
 proxy.port = 0
Index: eXist.iml
===================================================================
--- eXist.iml	(revision 13502)
+++ eXist.iml	(working copy)
@@ -1,152 +1,39 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<module relativePaths="true" type="JAVA_MODULE" version="4">
-  <component name="FacetManager">
-    <facet type="web" name="Web3">
-      <configuration>
-        <descriptors>
-          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/webapp/WEB-INF/web.xml" optional="false" version="2.5" />
-        </descriptors>
-        <webroots>
-          <root url="file://$MODULE_DIR$/webapp" relative="/" />
-        </webroots>
-        <building>
-          <setting name="EXPLODED_URL" value="file://" />
-          <setting name="EXPLODED_ENABLED" value="false" />
-          <setting name="JAR_URL" value="file://" />
-          <setting name="JAR_ENABLED" value="false" />
-          <setting name="EXCLUDE_EXPLODED_DIRECTORY" value="true" />
-        </building>
-        <packaging>
-          <containerElement type="module" name="eXist">
-            <attribute name="method" value="1" />
-            <attribute name="URI" value="/WEB-INF/classes" />
-          </containerElement>
-        </packaging>
-      </configuration>
-    </facet>
-    <facet type="web" name="Web2">
-      <configuration>
-        <descriptors>
-          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/tools/XFormsFilter/web.xml" optional="false" version="2.5" />
-        </descriptors>
-        <webroots>
-          <root url="file://$MODULE_DIR$/tools/XFormsFilter" relative="/WEB-INF" />
-        </webroots>
-        <building>
-          <setting name="EXPLODED_URL" value="file://" />
-          <setting name="EXPLODED_ENABLED" value="false" />
-          <setting name="JAR_URL" value="file://" />
-          <setting name="JAR_ENABLED" value="false" />
-          <setting name="EXCLUDE_EXPLODED_DIRECTORY" value="true" />
-        </building>
-        <packaging>
-          <containerElement type="module" name="eXist">
-            <attribute name="method" value="1" />
-            <attribute name="URI" value="/WEB-INF/classes" />
-          </containerElement>
-        </packaging>
-      </configuration>
-    </facet>
-    <facet type="web" name="Web">
-      <configuration>
-        <descriptors>
-          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/tools/ircbot/webapp/WEB-INF/web.xml" optional="false" version="2.5" />
-        </descriptors>
-        <webroots>
-          <root url="file://$MODULE_DIR$/tools/ircbot/webapp" relative="/" />
-        </webroots>
-        <building>
-          <setting name="EXPLODED_URL" value="file://" />
-          <setting name="EXPLODED_ENABLED" value="false" />
-          <setting name="JAR_URL" value="file://" />
-          <setting name="JAR_ENABLED" value="false" />
-          <setting name="EXCLUDE_EXPLODED_DIRECTORY" value="true" />
-        </building>
-        <packaging>
-          <containerElement type="module" name="eXist">
-            <attribute name="method" value="1" />
-            <attribute name="URI" value="/WEB-INF/classes" />
-          </containerElement>
-        </packaging>
-      </configuration>
-    </facet>
-    <facet type="web" name="Web4">
-      <configuration>
-        <descriptors>
-          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/build/docs/source/WEB-INF/web.xml" optional="false" version="2.5" />
-        </descriptors>
-        <webroots>
-          <root url="file://$MODULE_DIR$/build/docs/source" relative="/" />
-        </webroots>
-        <building>
-          <setting name="EXPLODED_URL" value="file://" />
-          <setting name="EXPLODED_ENABLED" value="false" />
-          <setting name="JAR_URL" value="file://" />
-          <setting name="JAR_ENABLED" value="false" />
-          <setting name="EXCLUDE_EXPLODED_DIRECTORY" value="true" />
-        </building>
-        <packaging>
-          <containerElement type="module" name="eXist">
-            <attribute name="method" value="1" />
-            <attribute name="URI" value="/WEB-INF/classes" />
-          </containerElement>
-        </packaging>
-      </configuration>
-    </facet>
-  </component>
+<module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/extensions/debuggee/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/debuggee/test" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/extensions/fluent/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/extensions/fluent/test/src" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/fluent/test/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/lucene/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/lucene/test/src" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/lucene/test/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/ngram/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/ngram/test/src" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/ngram/test/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/spatial/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/spatial/test/src" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/indexes/spatial/test/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/extensions/modules/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/svn/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/svn/test" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/extensions/versioning/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/samples" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/xprocxq/main/src/java" isTestSource="false" packagePrefix="org.exist.xquery.functions.util" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/xqdoc/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/xqdoc/test/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/xslt/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/extensions/xslt/test" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/samples/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/test/src" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/tools/XFormsFilter/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/test/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/thirdparty/jboss/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/tools/ircbot/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/tools/izpack/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/tools/requestlog/src" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/tools/requestlog/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/tools/wrapper/src" isTestSource="false" />
-      <excludeFolder url="file://$MODULE_DIR$/test/benchmark" />
-      <excludeFolder url="file://$MODULE_DIR$/test/junit" />
-      <excludeFolder url="file://$MODULE_DIR$/test/temp" />
-      <excludeFolder url="file://$MODULE_DIR$/tools/jetty/logs" />
-      <excludeFolder url="file://$MODULE_DIR$/tools/jetty/work" />
-      <excludeFolder url="file://$MODULE_DIR$/webapp/WEB-INF/data" />
-      <excludeFolder url="file://$MODULE_DIR$/webapp/WEB-INF/logs" />
+      <sourceFolder url="file://$MODULE_DIR$/tools/XFormsFilter/src" isTestSource="false" />
     </content>
-    <orderEntry type="jdk" jdkName="1.5" jdkType="JavaSDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" exported="" name="optional libs" level="project" />
-    <orderEntry type="library" exported="" name="core libs" level="project" />
-    <orderEntry type="library" exported="" name="tools" level="project" />
-    <orderEntry type="library" exported="" name="core" level="project" />
-    <orderEntry type="library" name="xmlrpc-1.2-patched" level="project" />
-    <orderEntry type="library" exported="" name="optional" level="project" />
-    <orderEntry type="library" exported="" name="user" level="project" />
-    <orderEntry type="library" exported="" name="endorsed" level="project" />
-    <orderEntry type="library" exported="" name="cocoon" level="project" />
-    <orderEntry type="library" exported="" name="ant" level="project" />
-    <orderEntry type="library" exported="" name="test" level="project" />
-    <orderEntry type="library" exported="" name="extensions" level="project" />
-    <orderEntry type="module-library" exported="">
-      <library>
-        <CLASSES>
-          <root url="jar://$APPLICATION_HOME_DIR$/lib/javaee.jar!/" />
-        </CLASSES>
-        <JAVADOC />
-        <SOURCES />
-      </library>
-    </orderEntry>
-    <orderEntry type="library" exported="" name="main" level="project" />
   </component>
 </module>
 
